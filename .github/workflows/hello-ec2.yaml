name: Test EC2 Connection

# ssh -o StrictHostKeyChecking=no 
# -i ~/.ssh/clouds2025.pem -p 12137 
# ubuntu@13.125.218.128
# GitHub Actions 러너는 매번 다른 IP를 사용하므로, 
# 보안 그룹에서 SSH 포트(22번)를 0.0.0.0/0으로 열어야 합니다.

on:
  workflow_dispatch:  # 수동 실행 가능

jobs:
  test-connection:
    name: Test EC2 SSH Connection
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Test SSH Connection to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          HOSTNAME: ${{ secrets.EC2_SSH_HOST }}
          USER_NAME: ${{ secrets.EC2_USER_NAME }}
        run: |
          echo "SSH 연결 테스트를 시작합니다..."
          
          # SSH 디렉토리 생성
          mkdir -p ~/.ssh/
          
          # known_hosts 파일 생성 및 호스트 키 추가
          ssh-keyscan -H $HOSTNAME >> ~/.ssh/known_hosts
          
          # SSH 개인키 설정
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          chmod 600 ~/.ssh/known_hosts
          chmod 700 ~/.ssh/
 
          # EC2에 SSH 접속하여 기본 정보 확인
          ssh -vvv -o StrictHostKeyChecking=no -i private_key -p 12137 ${USER_NAME}@${HOSTNAME} '
            echo "=== EC2 연결 성공! ==="
            echo "현재 사용자: $(whoami)"
            echo "호스트명: $(hostname)"
            echo "현재 시간: $(date)"
            echo "운영체제: $(cat /etc/os-release | grep PRETTY_NAME)"
            echo "현재 디렉토리: $(pwd)"
            echo "디스크 사용량:"
            df -h | head -5
            echo "메모리 사용량:"
            free -h
            echo "=== Hello from EC2! ==="
          '          
          
          echo "SSH 연결 테스트가 완료되었습니다."

      - name: Cleanup
        if: always()
        run: |
          rm -f private_key
